[{"/home/mayuri/GOOGLE/clone/src/index.js":"1","/home/mayuri/GOOGLE/clone/src/SearchPage.js":"2","/home/mayuri/GOOGLE/clone/src/pages/Search.js":"3","/home/mayuri/GOOGLE/clone/src/reducer.js":"4","/home/mayuri/GOOGLE/clone/src/useGoogleSearch.js":"5","/home/mayuri/GOOGLE/clone/src/Keys.js":"6","/home/mayuri/GOOGLE/clone/src/App.js":"7","/home/mayuri/GOOGLE/clone/src/pages/Home.js":"8","/home/mayuri/GOOGLE/clone/src/StateProvider.js":"9","/home/mayuri/GOOGLE/clone/src/serviceWorker.js":"10"},{"size":690,"mtime":1607767999639,"results":"11","hashOfConfig":"12"},{"size":4399,"mtime":1607781411230,"results":"13","hashOfConfig":"12"},{"size":2002,"mtime":1607767812454,"results":"14","hashOfConfig":"12"},{"size":402,"mtime":1607768242860,"results":"15","hashOfConfig":"12"},{"size":641,"mtime":1607779374306,"results":"16","hashOfConfig":"12"},{"size":91,"mtime":1607778589775,"results":"17","hashOfConfig":"12"},{"size":509,"mtime":1607761355550,"results":"18","hashOfConfig":"12"},{"size":1435,"mtime":1607761417946,"results":"19","hashOfConfig":"12"},{"size":458,"mtime":1607768056435,"results":"20","hashOfConfig":"12"},{"size":5085,"mtime":1607768160203,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1moahz9",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/mayuri/GOOGLE/clone/src/index.js",[],["45","46"],"/home/mayuri/GOOGLE/clone/src/SearchPage.js",["47"],"import React from 'react';\nimport './SearchPage.css';\nimport { useStateValue } from './StateProvider';\nimport useGoogleSearch from './useGoogleSearch';\nimport { Link } from \"react-router-dom\";\nimport Search from './pages/Search';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Description from \"@material-ui/icons/Description\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\n\n\n\nfunction SearchPage() {\n    const [{term}, dispatch] = useStateValue();\n    const { data } = useGoogleSearch(term);\n\n\n    console.log(data)\n    return (\n        <div className=\"searchPage\">\n            <div className=\"searchPage__header\">\n                <Link to=\"/\">\n                    <img\n                        className=\"searchPage__logo\"\n\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/1200px-Google_2015_logo.svg.png\"\n                        alt=\"\"\n                    />\n                </Link>\n                <div className=\"searchPage__headerBody\">\n                    <Search hideButtons />\n                    <div\n                        className=\"searchPage__options\">\n                        <div\n                            className=\"searchPage__optionsLeft\">\n                            <div className=\"searchPage__option\">\n                                <SearchIcon />\n                                <Link to=\"/all\">All</Link>\n                            </div>\n                            <div className=\"searchPage__option\">\n                                <Description />\n                                <Link to=\"/news\">News</Link>\n                            </div>\n                            <div className=\"searchPage__option\">\n                                <ImageIcon />\n                                <Link to=\"/images\">Images</Link>\n                            </div>\n                            <div className=\"searchPage__option\">\n                                <LocalOfferIcon />\n                                <Link to=\"/shopping\">shopping</Link>\n                            </div>\n                            <div className=\"searchPage__option\">\n                                <RoomIcon />\n                                <Link to=\"/maps\">maps</Link>\n                            </div>\n                            <div className=\"searchPage__option\">\n                                <MoreVertIcon />\n                                <Link to=\"/more\">more</Link>\n                            </div>\n                        </div>\n\n                        <div className=\"searchPage__optionsRight\">\n                            <div className=\"searchPage__option\">\n                                <Link to=\"/settings\">Settings</Link>\n                            </div>\n                            <div className=\"searchPage__option\">\n                                <Link to=\"/tools\">Tools</Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n   {term && (\n    <div\n     className=\"searchPage__results\">\n        <p\n        className=\"searchPage__resultCount\">\n          About {data?.searchInformation.formattedTotalResults} results ({data?.searchInformation.formattedSearchTime} seconds ) for {term}\n        </p>\n        {data?.items.map(item => (\n         <div\n        \n         className=\"searchPage__result\">\n         <a href={item.link}>\n                 {item.pagemap?.cse_image?.length > 0 &&\n                  item.pagemap?.cse_image[0]?.src && (\n                   <img\n                   className=\"searchPage__resultImage\"\n                   src={\n                   item.pagemap?.cse_image?.length > 0 &&\n                   item.pagemap?.cse_image[0]?.src\n\n                   }  \n                   alt=\"\" />\n                 )}\n             {item.displayLink} \n            </a>\n             <a\n             className=\"searchPage__resultTitle\" href={item.link}>\n                 <h2>{item.title}</h2>\n             </a>\n             <p\n             className=\"searchPage__resultSnippet\">{item.snippet}\n\n             </p>\n             </div>   \n        ))}\n            </div>\n            )}\n    </div>\n    )\n}\n\nexport default SearchPage;\n","/home/mayuri/GOOGLE/clone/src/pages/Search.js",["48"],"import React, { useState } from 'react';\nimport \"./Search.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { actionTypes } from \"../reducer\";\nimport { useStateValue } from '../StateProvider';\n\n   function Search({ hideButtons = false }) {\n        const [{}, dispatch] = useStateValue();\n\n\n    const [input, setInput] = useState(\"\");\n    const history = useHistory();\n\n\n    const search = (e) => {\n     e.preventDefault();\n\n     console.log(\"you hit the search button >>\", input)\n\n     dispatch({\n        type: actionTypes.SET_SEARCH_TERM,\n        term: input\n      })\n   // do something with input... come back and fix\n   history.push('/search')\n };\n\n    return (\n        <form className=\"search\">\n            <div className=\"search__input\">\n                <SearchIcon className=\"search__inputIcon\" />\n                <input value={input} onChange={e => setInput(e.target.value)}/>\n                <MicIcon />\n             </div>\n\n             {!hideButtons ? (\n          <div className=\"search__buttons\">\n                 <Button type =\"submit\" onClick={search} \n                 variant=\"outlined\">\n                     Google Search\n                 </Button>\n                 <Button variant=\"outlined\">\n                     I'm Feeling Lucky\n                 </Button>\n\n             </div>\n                ): (\n            <div className=\"search__buttons\">\n                 <Button className=\"search__buttonsHidden\"\n                 type =\"submit\" onClick={search} \n                 variant=\"outlined\">\n                     Google Search\n                 </Button>\n                 \n                 <Button className=\"search__buttonsHidden\"\n                 variant=\"outlined\">\n                     I'm Feeling Lucky\n                 </Button>\n\n             </div>\n             )}\n             \n        </form>\n    );\n}\n\nexport default Search","/home/mayuri/GOOGLE/clone/src/reducer.js",[],"/home/mayuri/GOOGLE/clone/src/useGoogleSearch.js",[],"/home/mayuri/GOOGLE/clone/src/Keys.js",[],"/home/mayuri/GOOGLE/clone/src/App.js",[],"/home/mayuri/GOOGLE/clone/src/pages/Home.js",[],"/home/mayuri/GOOGLE/clone/src/StateProvider.js",[],"/home/mayuri/GOOGLE/clone/src/serviceWorker.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":18,"column":20,"nodeType":"55","messageId":"56","endLine":18,"endColumn":28},{"ruleId":"57","severity":1,"message":"58","line":11,"column":16,"nodeType":"59","messageId":"60","endLine":11,"endColumn":18},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]